rm( list = ls() )
setwd( "/Users/jyoung20/GitHub/TAWR2" )
text_v <- scan( "data/text/melville.txt", what = "character", sep = "\n" )
start_v <- which( text_v == "CHAPTER 1. Loomings." )
novel_lines_v <- text_v[start_v : length( text_v )]
chap_positions_v <- grep( "^CHAPTER \\d", novel_lines_v )
last_positions_v <- length( novel_lines_v )
chap_positions_v <- c( chap_positions_v, last_positions_v )
# this is the chapters
chapter_raws_l <- list()
#
chapter_freqs_l <- list()
for( i in 1:length( chap_positions_v ) ){
if( i != length( chap_positions_v ) ){
chapter_title <- novel_lines_v[chap_positions_v[i]]
start <- chap_positions_v[i] + 1
end <- chap_positions_v[i + 1] - 1
chapter_lines_v <- novel_lines_v[start:end]
chapter_words_v <- tolower( paste( chapter_lines_v, collapse = " " ) )
chapter_words_l <- strsplit( chapter_words_v, "\\W" )
chapter_word_v <- unlist( chapter_words_l )
chapter_word_v <- chapter_word_v[which( chapter_word_v != "" )]
chapter_freqs_t <- table( chapter_word_v )
chapter_raws_l[[chapter_title]] <- chapter_freqs_t
chapter_freqs_t_rel <- 100 * ( chapter_freqs_t / sum( chapter_freqs_t ) )
chapter_freqs_l[[chapter_title]] <- chapter_freqs_t_rel
}
}
chapter_raws_l
chapter_lengths_df <- stack( lapply( chapter_raws_l, sum ) )
chapter_lengths_df
class( chapter_lengths_df) ; class( ch)
class( chapter_lengths_df) ; class( chapter_lengths_df)
chapter_hapax_v <- sapply( chapter_raws_l, function( x ) sum( x == 1 ) )
chapter_hapax_v
hist(chapter_hapax_v)
chap_haps_df_l <- lapply( chapter_raws_l, function( x ) sum( x == 1 ) )
chap_haps_df <- stack( chap_haps_df_l )
chap_haps_df
a_data_frame <- data.frame( chapter_lengths_df, chap_haps_df )
a_data_frame
hap_lens_df <- data.frame(
chap_names = chapter_lengths_df$ind,
chapter_lengths = chapter_lengths_df$values,
num_hapax = chap_haps_df$values
)
head(hap_lens_df)
library( dplyr )
?dplyr
new_df <- mutate(
hap_lens_df,
hapax_percentage = num_hapax / chapter_lengths
)
new_df
# clean up the headings
nice_df <- mutate(
new_df,
short_title = gsub( "\\..*$", "", chap_names )
)
nice_df
